////////////////////////////////////////////////////////////////////////////////////////////////////
// Noesis Engine - http://www.noesisengine.com
// Copyright (c) 2009-2010 Noesis Technologies S.L. All Rights Reserved.
// [CR #868]
////////////////////////////////////////////////////////////////////////////////////////////////////


#include <NsMath/Utils.h>


namespace Noesis
{
namespace Drawing
{

////////////////////////////////////////////////////////////////////////////////////////////////////
Point::Point(): Math::Vector2f(0.0f, 0.0f)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
Point::Point(NsFloat32 x, NsFloat32 y): Math::Vector2f(x, y)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
Point::Point(const Pointi& point): Math::Vector2f((NsFloat32)point.x, (NsFloat32)point.y)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
Point::Point(const Math::Vector2f& v): Math::Vector2f(v)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
Point::Point(const Size& size) : Math::Vector2f(size.width, size.height)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
Point::Point(const Point& point): Math::Vector2f(point)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
Point& Point::operator=(const Point& point)
{
    x = point.x;
    y = point.y;
    return *this;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
Pointi::Pointi(): Math::Vector2i(0, 0)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
Pointi::Pointi(NsInt x, NsInt y): Math::Vector2i(x, y)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
Pointi::Pointi(const Point& p): Math::Vector2i(Math::Round(p.x), Math::Round(p.y))
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
Pointi::Pointi(const Math::Vector2i& v): Math::Vector2i(v)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
Pointi::Pointi(const Sizei& size) : Math::Vector2i(size.width, size.height)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
Pointi::Pointi(const Pointi& point): Math::Vector2i(point)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
Pointi& Pointi::operator=(const Pointi& point)
{
    x = point.x;
    y = point.y;
    return *this;
}

}
}
