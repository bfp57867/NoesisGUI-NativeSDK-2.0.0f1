////////////////////////////////////////////////////////////////////////////////////////////////////
// Noesis Engine - http://www.noesisengine.com
// Copyright (c) 2009-2010 Noesis Technologies S.L. All Rights Reserved.
////////////////////////////////////////////////////////////////////////////////////////////////////


#ifndef __CORE_NSTLDEFAULTALLOCATOR_H__
#define __CORE_NSTLDEFAULTALLOCATOR_H__


#include <Noesis.h>


////////////////////////////////////////////////////////////////////////////////////////////////////
namespace eastl
{

////////////////////////////////////////////////////////////////////////////////////////////////////
// nstl default allocator
////////////////////////////////////////////////////////////////////////////////////////////////////
class DefaultAllocator
{
public:
    explicit DefaultAllocator(const char* pName = "");
    DefaultAllocator(const DefaultAllocator& other);
    DefaultAllocator(const DefaultAllocator& other, const char* pName);

    DefaultAllocator& operator=(const DefaultAllocator& other);

    void* allocate(size_t n, int flags = 0);
    void* allocate(size_t n, size_t alignment, size_t offset, int flags = 0);
    void  deallocate(void* p, size_t n);

    const char* get_name() const;
    void        set_name(const char* pName);
};

////////////////////////////////////////////////////////////////////////////////////////////////////
bool operator==(const DefaultAllocator& a, const DefaultAllocator& b);

////////////////////////////////////////////////////////////////////////////////////////////////////
bool operator!=(const DefaultAllocator& a, const DefaultAllocator& b);

}

////////////////////////////////////////////////////////////////////////////////////////////////////
#include "NSTLDefaultAllocator.inl"

////////////////////////////////////////////////////////////////////////////////////////////////////
// Namespace alias 
////////////////////////////////////////////////////////////////////////////////////////////////////
namespace Noesis
{
    namespace Core
    {
        namespace nstl = eastl;
    }
}


#endif 