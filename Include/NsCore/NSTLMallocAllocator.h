////////////////////////////////////////////////////////////////////////////////////////////////////
// Noesis Engine - http://www.noesisengine.com
// Copyright (c) 2009-2010 Noesis Technologies S.L. All Rights Reserved.
////////////////////////////////////////////////////////////////////////////////////////////////////


#ifndef __CORE_NSTLMALLOCALLOCATOR_H__
#define __CORE_NSTLMALLOCALLOCATOR_H__


#include <Noesis.h>


////////////////////////////////////////////////////////////////////////////////////////////////////
namespace eastl
{

////////////////////////////////////////////////////////////////////////////////////////////////////
// nstl malloc allocator that uses CRT malloc / free
////////////////////////////////////////////////////////////////////////////////////////////////////
class MallocAllocator
{
public:
    explicit MallocAllocator(const char* pName = "");
    MallocAllocator(const MallocAllocator& other);
    MallocAllocator(const MallocAllocator& other, const char* pName);

    MallocAllocator& operator=(const MallocAllocator& other);

    void* allocate(size_t n, int flags = 0);
    void* allocate(size_t n, size_t alignment, size_t offset, int flags = 0);
    void  deallocate(void* p, size_t n);

    const char* get_name() const;
    void        set_name(const char* pName);
};

////////////////////////////////////////////////////////////////////////////////////////////////////
bool operator==(const MallocAllocator& a, const MallocAllocator& b);

////////////////////////////////////////////////////////////////////////////////////////////////////
bool operator!=(const MallocAllocator& a, const MallocAllocator& b);

}

////////////////////////////////////////////////////////////////////////////////////////////////////
#include "NSTLMallocAllocator.inl"

////////////////////////////////////////////////////////////////////////////////////////////////////
// Namespace alias 
////////////////////////////////////////////////////////////////////////////////////////////////////
namespace Noesis
{
namespace Core
{
namespace nstl = eastl;
}
}


#endif 