////////////////////////////////////////////////////////////////////////////////////////////////////
// Noesis Engine - http://www.noesisengine.com
// Copyright (c) 2009-2010 Noesis Technologies S.L. All Rights Reserved.
////////////////////////////////////////////////////////////////////////////////////////////////////


#ifndef __CORE_NSTLSAFEALLOCATOR_H__
#define __CORE_NSTLSAFEALLOCATOR_H__


#include <Noesis.h>


////////////////////////////////////////////////////////////////////////////////////////////////////
namespace eastl
{

////////////////////////////////////////////////////////////////////////////////////////////////////
// An allocator that is redirected to the kernel memory manager if it has been initialized and
// fallbacks to malloc if not
////////////////////////////////////////////////////////////////////////////////////////////////////
class SafeAllocator
{
public:
    explicit SafeAllocator(const char* pName = "");
    SafeAllocator(const SafeAllocator& other);
    SafeAllocator(const SafeAllocator& other, const char* pName);

    SafeAllocator& operator=(const SafeAllocator& other);

    void* allocate(size_t n, int flags = 0);
    void* allocate(size_t n, size_t alignment, size_t offset, int flags = 0);
    void  deallocate(void* p, size_t n);

    const char* get_name() const;
    void        set_name(const char* pName);
};

////////////////////////////////////////////////////////////////////////////////////////////////////
bool operator==(const SafeAllocator& a, const SafeAllocator& b);

////////////////////////////////////////////////////////////////////////////////////////////////////
bool operator!=(const SafeAllocator& a, const SafeAllocator& b);

}

////////////////////////////////////////////////////////////////////////////////////////////////////
#include "NSTLSafeAllocator.inl"

////////////////////////////////////////////////////////////////////////////////////////////////////
// Namespace alias 
////////////////////////////////////////////////////////////////////////////////////////////////////
namespace Noesis
{
namespace Core
{
namespace nstl = eastl;
}
}


#endif 